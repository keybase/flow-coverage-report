{"version":3,"sources":["../../../src/lib/cli/config.js"],"names":["loadConfig","validateConfig","UsageError","message","name","Error","toArray","value","Array","isArray","DEFAULT_FLOW_TIMEOUT","defaultConfig","reportTypes","flowCommandPath","flowCommandTimeout","projectDir","path","resolve","process","cwd","globExcludePatterns","globIncludePatterns","threshold","percentDecimals","outputDir","concurrentFiles","strictCoverage","excludeNonFlow","noConfig","htmlTemplateOptions","autoHeightSource","showMeterBar","getProjectDir","config","normalizedConfig","includeGlob","console","warn","excludeGlob","type","args","Object","keys","key","filePath","fileRawData","fs","readFileSync","fileConfigData","String","env","VERBOSE","log","packageJSONPath","join","pkg","require","err","error","projectConfigPath","projectConfigRaw","projectConfigData","raiseErrorIfArray","msg","preventDuplicatedOptions","option","length","glob"],"mappings":"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","file":"config.js","sourcesContent":["// @flow\nimport path from 'path';\nimport fs from 'fs';\nimport parseJSON from 'parse-json';\nimport stripJSONComments from 'strip-json-comments';\n\nexport type HTMLTemplateOptions = {|\n  autoHeightSource: bool,\n  showMeterBar: bool\n|}\n\nexport type ReportType = 'json' | 'text' | 'badge' |'html';\n\nexport type ConfigParams = {|\n  reportTypes?: Array<ReportType>,\n  flowCommandPath: string,\n  flowCommandTimeout: number,\n  projectDir: string,\n  globExcludePatterns?: Array<string>,\n  globIncludePatterns: Array<string>,\n  threshold: number,\n  percentDecimals: number,\n  outputDir: string,\n  concurrentFiles?: number,\n  strictCoverage: bool,\n  excludeNonFlow: bool,\n  noConfig: bool,\n  htmlTemplateOptions?: HTMLTemplateOptions,\n\n  // Legacy params.\n  includeGlob?: ?Array<string>,\n  excludeGlob?: ?Array<string>,\n  type?: ?Array<ReportType>,\n|}\n\nexport type DefaultConfigParams = {\n  ...ConfigParams,\n  reportTypes: Array<ReportType>,\n  concurrentFiles: number,\n}\n\nexport class UsageError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UsageError';\n  }\n}\n\nconst toArray = (value: any): Array<any> => Array.isArray(value) ? value : [value];\n\n// Default timeout for flow coverage commands.\nexport const DEFAULT_FLOW_TIMEOUT = 15 * 1000;\n\nexport const defaultConfig: DefaultConfigParams = {\n  reportTypes: ['text'],\n  flowCommandPath: 'flow',\n  flowCommandTimeout: DEFAULT_FLOW_TIMEOUT,\n  projectDir: path.resolve(process.cwd()),\n  globExcludePatterns: ['node_modules/**'],\n  globIncludePatterns: [],\n  threshold: 80,\n  percentDecimals: 0,\n  outputDir: './flow-coverage',\n  concurrentFiles: 1,\n  strictCoverage: false,\n  excludeNonFlow: false,\n  noConfig: false,\n  htmlTemplateOptions: {\n    autoHeightSource: true,\n    showMeterBar: false\n  }\n};\n\nconst getProjectDir = (config: Object): string => {\n  const {projectDir} = ({...defaultConfig, ...config});\n\n  if (!projectDir) {\n    throw new UsageError('projectDir option is mandatory');\n  }\n\n  if (typeof projectDir !== 'string') {\n    throw new UsageError('Unexpected non-string projectDir option');\n  }\n\n  return projectDir;\n};\n\n/**\n * Normalize config properties to match the property name used internally\n * when it has multiple aliases.\n *\n * @param {object} config\n */\nfunction normalizedConfig(config: ConfigParams): ConfigParams {\n  if (typeof config.includeGlob !== 'undefined') {\n    console.warn('WARN: \"includeGlob\" config file property has been renamed to \"globIncludePatterns\"');\n    config.globIncludePatterns = toArray(config.includeGlob);\n  }\n\n  if (typeof config.excludeGlob !== 'undefined') {\n    console.warn('WARN: \"excludeGlob\" config file property has been renamed to \"globExcludePatterns\"');\n    config.globExcludePatterns = toArray(config.excludeGlob);\n  }\n\n  if (typeof config.type !== 'undefined') {\n    console.warn('WARN: \"type\" config file property has been renamed to \"reportTypes\"');\n    config.reportTypes = toArray(config.type);\n  }\n\n  return config;\n}\n\n/**\n * Try to load configuration parameters from the project dir if the following order:\n * - do not load any config if --no-config option is specified\n * - from the package.json \"flow-coverage-report\" property, if any\n * - from a .flow-coverage-report.json, if any\n * - from the --config cli parameter, if any\n */\nexport function loadConfig(args: Object): Object {\n  // Remove any undefined property from the yargs object.\n  for (const key of Object.keys(args)) {\n    if (typeof args[key] === 'undefined') {\n      delete args[key];\n    }\n  }\n\n  if (args.noConfig) {\n    return {\n      ...defaultConfig,\n      ...args\n    };\n  }\n\n  if (args.includeGlob) {\n    args.includeGlob = toArray(args.includeGlob);\n  }\n\n  if (args.globIncludePatterns) {\n    args.globIncludePatterns = toArray(args.globIncludePatterns);\n  }\n\n  if (args.config) {\n    const filePath = path.resolve(args.config);\n    const fileRawData = fs.readFileSync(filePath);\n    const fileConfigData = parseJSON(stripJSONComments(String(fileRawData)));\n\n    if (process.env.VERBOSE) {\n      console.log('Loaded config from file', filePath, fileConfigData);\n    }\n\n    return {\n      ...defaultConfig,\n      ...normalizedConfig(fileConfigData),\n      ...args\n    };\n  }\n\n  let packageJSONPath;\n\n  try {\n    packageJSONPath = path.resolve(path.join(getProjectDir(args), 'package.json'));\n    // $FlowIgnoreMe: the following dynamic require loads only the package.json file.\n    const pkg = require(packageJSONPath); // eslint-disable-line import/no-dynamic-require\n    if (pkg['flow-coverage-report']) {\n      if (process.env.VERBOSE) {\n        console.log('Loaded config from package.json', pkg['flow-coverage-report']);\n      }\n\n      return {\n        ...defaultConfig,\n        ...normalizedConfig(pkg['flow-coverage-report']),\n        ...args\n      };\n    }\n  } catch (err) {\n    if (process.env.VERBOSE) {\n      console.error('Unable to load config from project package.json', packageJSONPath, err);\n    }\n  }\n\n  let projectConfigPath;\n\n  try {\n    projectConfigPath = path.resolve(path.join(getProjectDir(args), '.flow-coverage-report.json'));\n    const projectConfigRaw = fs.readFileSync(projectConfigPath);\n    const projectConfigData = parseJSON(stripJSONComments(String(projectConfigRaw)));\n\n    if (process.env.VERBOSE) {\n      console.log('Loaded config from project dir', projectConfigPath, projectConfigData);\n    }\n\n    return {\n      ...defaultConfig,\n      ...normalizedConfig(projectConfigData),\n      ...args\n    };\n  } catch (err) {\n    if (process.env.VERBOSE) {\n      console.error('Unable to load config from file', projectConfigPath, err);\n    }\n  }\n\n  return {\n    ...defaultConfig,\n    ...args\n  };\n}\n\n/**\n * Validate the arguments collected from the command line and config files and\n * ensure that it is a valid FlowCoverageReportOptions object (as described by its\n * flow type declaration in the \"src/lib/index.js module\")\n */\n\nexport function validateConfig(args: Object): Object {\n  function raiseErrorIfArray(value, msg) {\n    if (Array.isArray(value)) {\n      throw new UsageError(`ERROR: Only one ${msg} can be specified.`);\n    }\n  }\n\n  const preventDuplicatedOptions = {\n    projectDir: 'project dir',\n    outputDir: 'output dir',\n    threshold: 'threshold',\n    flowCommandPath: 'flow command',\n    concurrentFiles: '--concurrent-files option'\n  };\n\n  for (const option of Object.keys(preventDuplicatedOptions)) {\n    const msg = preventDuplicatedOptions[option];\n    raiseErrorIfArray(args[option], msg);\n  }\n\n  const {globIncludePatterns} = args;\n  if (!globIncludePatterns || globIncludePatterns.length === 0 ||\n      !globIncludePatterns[0]) {\n    throw new UsageError('ERROR: No glob has been specified.');\n  }\n\n  for (const glob of globIncludePatterns) {\n    if (glob[0] === '!') {\n      throw new UsageError('ERROR: Only include glob syntax are supported.');\n    }\n  }\n\n  return args;\n}\n"]}
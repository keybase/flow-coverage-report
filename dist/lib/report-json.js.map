{"version":3,"sources":["../../src/lib/report-json.js"],"names":["saveFlowCoverageReportJSON","coverageSummaryData","opts","projectDir","outputDir","path","join","globIncludePatterns","then","Buffer","from","JSON","stringify","generate"],"mappings":"AAAA;;;;;;AAIA;;;;AAEA;;;;AAKA,SAASA,0BAAT,CACEC,mBADF,EAEEC,IAFF,EAGE;AACA,MAAMC,aAAaD,KAAKC,UAAxB;AACA,MAAMC,YAAYF,KAAKE,SAAL,IAAkBC,eAAKC,IAAL,CAAUH,UAAV,EAAsB,eAAtB,CAApC;;AAEAF,sBAAoBM,mBAApB,GAA0CL,KAAKK,mBAA/C;;AAEA,SAAO,yBAAOH,SAAP,EAAkBI,IAAlB,CAAuB;AAAA,WAC5B,4BACEH,eAAKC,IAAL,CAAUF,SAAV,EAAqB,oBAArB,CADF,EAEEK,OAAOC,IAAP,CAAYC,KAAKC,SAAL,CAAeX,mBAAf,CAAZ,CAFF,CAD4B;AAAA,GAAvB,EAKLO,IALK,CAKA,YAAM;AACX,WAAO,CAACP,mBAAD,EAAsBC,IAAtB,CAAP;AACD,GAPM,CAAP;AAQD;;kBAEc;AACbW,YAAUb;AADG,C","file":"report-json.js","sourcesContent":["'use strict';\n\n// @flow\n\nimport path from 'path';\n\nimport {mkdirp, writeFile} from './promisified';\n\nimport type {FlowCoverageSummaryData} from './flow';\nimport type {FlowCoverageReportOptions} from './index';\n\nfunction saveFlowCoverageReportJSON(\n  coverageSummaryData: FlowCoverageSummaryData,\n  opts: FlowCoverageReportOptions\n) {\n  const projectDir = opts.projectDir;\n  const outputDir = opts.outputDir || path.join(projectDir, 'flow-coverage');\n\n  coverageSummaryData.globIncludePatterns = opts.globIncludePatterns;\n\n  return mkdirp(outputDir).then(() =>\n    writeFile(\n      path.join(outputDir, 'flow-coverage.json'),\n      Buffer.from(JSON.stringify(coverageSummaryData))\n    )\n  ).then(() => {\n    return [coverageSummaryData, opts];\n  });\n}\n\nexport default {\n  generate: saveFlowCoverageReportJSON\n};\n"]}